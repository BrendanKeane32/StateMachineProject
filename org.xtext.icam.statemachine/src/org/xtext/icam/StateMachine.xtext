grammar org.xtext.icam.StateMachine with org.eclipse.xtext.common.Terminals

generate stateMachine "http://www.xtext.org/icam/StateMachine"

model:
	statemachine+=StateMachine*
;
StateMachine:
	'machine' name=ID '{'
	
	events+=Event*
	
	commands+=Command+
	
	states+=State*
	'initial' initialstates=[State]
	'final' finalstates=[State]
	'}'
;

Event:
	 returnType=Type name=ID ('(' tests+=Test (',' tests+=Test)* ')')? ';'
;

Test:
	types+=Type args+=DeclaredParameter
;

Command:
	'command' name=ID
;


Modifier:
	visibility+=Visibility
;

enum Visibility:
	Final='final' | Initial='initial'
;

State:
	'state' name=ID
		('actions' '{' actions+=[Command]+ '}')?
		transitions+=Transition*
	'end'
;

Transition:
	'on' event=[Event] 'then' state=[State] 'if' condition =Condition?
;

Condition:
	name=ID
;

DeclaredParameter:
	name=VarName (INT'.'INT)?
;

VarName:
	{VarName} value=A_VARNAME
;

terminal A_VARNAME:
	('a'..'z')('a'..'z')+;


Type:
	{StringType} type="String"|{FloatType} type="Float" 
	
;






